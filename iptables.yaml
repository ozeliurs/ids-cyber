---
- name: Configure iptables rules
  hosts: all
  become: yes
  vars:
    default_table: filter
    default_jump: ACCEPT
    iptables_rules:
      - { chain: OUTPUT, protocol: udp, destination_port: 53 }
      - { chain: INPUT, protocol: udp, source_port: 53 }
      - { chain: OUTPUT, protocol: icmp }
      - { chain: INPUT, protocol: icmp }
      - { chain: OUTPUT, protocol: udp, destination_port: 67:68 }
      - {
          chain: INPUT,
          protocol: udp,
          destination_port: 67:68,
          source_port: 67:68,
        }
      - { chain: INPUT, in_interface: lo }
      - { chain: OUTPUT, out_interface: lo }
      - {
          chain: INPUT,
          protocol: tcp,
          source: 192.168.27.65,
          destination_port: 22,
        }
      - {
          chain: OUTPUT,
          protocol: tcp,
          source_port: 22,
          ctstate: ESTABLISHED,
          RELATED,
        }
      - { chain: OUTPUT, protocol: tcp, destination_port: 80 }
      - {
          chain: INPUT,
          protocol: tcp,
          source_port: 80,
          ctstate: ESTABLISHED,
          RELATED,
        }
      - { chain: INPUT, source: 172.17.0.0/12, jump: ACCEPT }
      - { chain: OUTPUT, destination: 172.17.0.0/12, jump: ACCEPT }
      - { chain: INPUT, policy: DROP }
      - { chain: OUTPUT, policy: DROP }

  tasks:
    - name: Apply iptables rules
      iptables:
        chain: "{{ item.chain }}"
        table: "{{ item.table | default(default_table) }}"
        policy: "{{ item.policy | default(omit) }}"
        protocol: "{{ item.protocol | default(omit) }}"
        destination_port: "{{ item.destination_port | default(omit) }}"
        source_port: "{{ item.source_port | default(omit) }}"
        in_interface: "{{ item.in_interface | default(omit) }}"
        out_interface: "{{ item.out_interface | default(omit) }}"
        source: "{{ item.source | default(omit) }}"
        destination: "{{ item.destination | default(omit) }}"
        ctstate: "{{ item.ctstate | default(omit) }}"
        jump: "{{ item.jump | default(default_jump) }}"
      loop: "{{ iptables_rules }}"

    - name: Check if iptables logging rule exists
      shell: 'iptables -t filter -C INPUT -m state --state NEW -j LOG --log-prefix "[IPTABLES]: " --log-ip-options'
      register: check_rule
      ignore_errors: yes

    - name: Add iptables logging
      command: 'iptables -t filter -I INPUT 1 -m state --state NEW -j LOG --log-prefix "[IPTABLES]: " --log-ip-options'
      when: check_rule.rc != 0

    - name: Create iptables folder
      shell: mkdir -p /etc/iptables

    - name: Save iptables rules
      shell: iptables-save > /etc/iptables/rules.v4
      args:
        creates: /etc/iptables/rules.v4
