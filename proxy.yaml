---
- name: Configure Apache2 with SSL and Proxy
  hosts: all
  become: yes
  vars:
    domain_name: juice.ozeliurs.com
    easy_rsa_dir: /etc/easy-rsa
    apache_ssl_dir: /etc/apache2/ssl

  tasks:
    - name: Install required packages
      apt:
        name: [apache2, easy-rsa]
        state: present
        update_cache: yes

    - name: Set up Easy-RSA and generate certificates
      block:
        - name: Create authority directory
          command: make-cadir {{ easy_rsa_dir }}
          args:
            creates: "{{ easy_rsa_dir }}"

        - name: Initialize PKI
          command: ./easyrsa init-pki
          args:
            chdir: "{{ easy_rsa_dir }}"
            creates: "{{ easy_rsa_dir }}/pki"

        - name: Generate CA certificate and key
          command: ./easyrsa build-ca nopass
          args:
            chdir: "{{ easy_rsa_dir }}"
            creates: "{{ easy_rsa_dir }}/pki/ca.crt"
            stdin: |
              {{ domain_name }}

        - name: Generate server certificate request
          command: ./easyrsa --batch gen-req {{ domain_name }} nopass
          args:
            chdir: "{{ easy_rsa_dir }}"
            creates: "{{ easy_rsa_dir }}/pki/reqs/{{ domain_name }}.req"

        - name: Sign server certificate
          command: ./easyrsa --batch sign-req server {{ domain_name }}
          args:
            chdir: "{{ easy_rsa_dir }}"
            creates: "{{ easy_rsa_dir }}/pki/issued/{{ domain_name }}.crt"

    - name: Configure Apache SSL
      block:
        - name: Ensure Apache SSL directory exists
          file:
            path: "{{ apache_ssl_dir }}"
            state: directory

        - name: Copy SSL certificates to Apache directory
          copy:
            src: "{{ easy_rsa_dir }}/pki/{{ item.src }}"
            dest: "{{ apache_ssl_dir }}/{{ item.dest }}"
            remote_src: yes
          loop:
            - {
                src: "issued/{{ domain_name }}.crt",
                dest: "{{ domain_name }}.crt",
              }
            - {
                src: "private/{{ domain_name }}.key",
                dest: "{{ domain_name }}.key",
              }

        - name: Enable Apache modules
          apache2_module:
            name: "{{ item }}"
            state: present
          loop: [ssl, proxy, proxy_http]

        - name: Create virtual host file
          template:
            src: templates/vhost.conf.j2
            dest: "/etc/apache2/sites-available/{{ domain_name }}.conf"
          notify: Restart Apache

        - name: Enable virtual host
          command: "a2ensite {{ domain_name }}"
          notify: Restart Apache

        - name: Disable default site
          command: "a2dissite 000-default"
          notify: Restart Apache

        - name: Allow HTTP IN
          iptables:
            chain: INPUT
            protocol: tcp
            destination_port: 80
            ctstate: NEW,ESTABLISHED
            jump: ACCEPT

        - name: Allow HTTPS IN
          iptables:
            chain: INPUT
            protocol: tcp
            destination_port: 443
            ctstate: NEW,ESTABLISHED
            jump: ACCEPT

        - name: Allow HTTP OUT
          iptables:
            chain: OUTPUT
            protocol: tcp
            source_port: 80
            jump: ACCEPT

        - name: Allow HTTPS OUT
          iptables:
            chain: OUTPUT
            protocol: tcp
            source_port: 443
            jump: ACCEPT

        - name: Save iptables rules
          shell: iptables-save > /etc/iptables/rules.v4

  handlers:
    - name: Restart Apache
      systemd:
        name: apache2
        state: restarted
